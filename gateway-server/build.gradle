buildscript {
	repositories {
		mavenCentral()
		//Needed only for SNAPSHOT versions
		//maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
	}
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
		classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.2'
	}
}



plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	// Test coverage
	id 'jacoco'

	// Code style
	id 'checkstyle'

	// PMD
	id 'pmd'

	// PITest
	id 'info.solidsoft.pitest' version '1.5.2'

	//Lombok
	id "io.freefair.lombok" version "5.3.0"
}

group = 'nl.tudelft.cse.sem.template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.0-M6")
}

apply plugin: "io.spring.dependency-management"

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.jetbrains:annotations:19.0.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
	testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
	testImplementation('org.assertj:assertj-core:3.14.0')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile "org.springframework.boot:spring-boot-starter-web"
	compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1"
	testCompile "org.springframework.boot:spring-boot-starter-test"
	//runtime('com.oracle:ojdbc7:12.1.0.2.0')
	runtimeOnly 'mysql:mysql-connector-java'
	// Local test database (in-memory)
	//implementation 'com.h2database:h2'
	developmentOnly 'org.hibernate:hibernate-entitymanager'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'

	compile "org.springframework.security:spring-security-test:4.2.3.RELEASE"
	implementation 'org.springframework.security:spring-security-test'
	compile "io.jsonwebtoken:jjwt:0.9.1"
	compile "javax.xml.bind:jaxb-api:2.3.0"
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//WebCLient and Eureka server dependencies
	compile 'org.springframework.cloud:spring-cloud-starter-config'
	compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	compile 'org.springframework.boot:spring-boot-starter-webflux'
	compile 'org.projectreactor:reactor-spring:1.0.1.RELEASE'
	compile group: 'org.springframework', name: 'spring-webflux', version: '5.2.7.RELEASE'

	//compile "org.springframework.boot:spring-boot-devtools"
//	compile "org.springframework.cloud:spring-cloud-starter-zuul"
//	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul:2.2.6.RELEASE'
	//compile('org.springframework.cloud:spring-cloud-starter-zuul')

	//compile group: 'org.springframework.cloud', name: 'spring-cloud-netflix-core', version: '1.0.4.RELEASE'


}


test {
	useJUnitPlatform()
	jacoco {
		enabled = true
		includes = ['nl.tudelft.sem.template.*']
		excludes = []
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

jacocoTestCoverageVerification() {
	dependsOn test
	violationRules {
		rule {
			enabled = true
			element = 'CLASS'
			includes = ['nl.tudelft.sem.template.*']

			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.1
			}
		}
	}
}

jacoco {
	toolVersion = "0.8.5"
}

checkstyle {
	toolVersion "8.37"
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
	incrementalAnalysis = true
}

apply plugin: 'info.solidsoft.pitest'
pitest {
	//adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
	junit5PluginVersion = '0.12'

	targetClasses = ['nl.tudelft.sem.template.*']  //by default "${project.group}.*"
	pitestVersion = '1.5.1' //not needed when a default PIT version should be used
	threads = 4
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
}



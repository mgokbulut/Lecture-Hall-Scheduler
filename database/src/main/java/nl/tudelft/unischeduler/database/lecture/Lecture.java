package nl.tudelft.unischeduler.database.lecture;

import java.sql.Time;
import java.sql.Timestamp;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Data;


@Entity
@Data
@AllArgsConstructor
@Table(name = "lecture", schema = "schedulingDB")
public class Lecture {
    @Id
    @Column(name = "id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "classroom_id")
    private Long classroom;

    @Column(name = "course_id")
    private Long course;

    @Column(name = "teacher")
    private String teacher;

    @Column(name = "start_time_date", nullable = false)
    private Timestamp startTimeDate;

    @Column(name = "duration", nullable = false)
    private Time duration;

    @Column(name = "moved_online", nullable = false)
    private boolean movedOnline;

    /**
     * This method initialises the Lecture object.
     */
    public Lecture() {

    }

    /**
     * This method initialises the Lecture object with specified parameters, Id is autogenerated.
     *
     * @param classroom classroom ID
     * @param course course ID
     * @param teacher user ID of the teacher
     * @param startTimeDate start time of the lecture
     * @param duration duration of the lecture
     * @param movedOnline is the lecture moved online
     */
    public Lecture(Long classroom, Long course, String teacher,
                   Timestamp startTimeDate, Time duration, boolean movedOnline) {
        this.classroom = classroom;
        this.course = course;
        this.teacher = teacher;
        this.startTimeDate = startTimeDate;
        this.duration = duration;
        this.movedOnline = movedOnline;
    }
}
